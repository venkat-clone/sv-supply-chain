openapi: 3.0.3
info:
  title: Order API
  version: 1.0.0
  description: API for managing Order data
servers:
  - url: http://localhost:3000/api

paths:
  /order:
    get:
      summary: Get all Order
      tags: [Order]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of Order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        'default':
          $ref: '#/components/responses/DefaultResponse'
    post:
      summary: Create a new Order
      tags: [Order]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreation'
      responses:
        '201':
          description: Order created
        'default':
          $ref: '#/components/responses/DefaultResponse'

  /order/{id}:
    get:
      summary: Get Order by ID
      tags: [Order]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A Order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        'default':
          $ref: '#/components/responses/DefaultResponse'

    put:
      summary: Update Order
      tags: [Order]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreation'
      responses:
        '200':
          description: Order updated
        'default':
          $ref: '#/components/responses/DefaultResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    DefaultResponse:
      description: Default error response
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
        customer:
          type: integer
        customerId:
          type: integer
        driver:
          type: integer
        driverId:
          type: integer
        vehicle:
          type: integer
        vehicleId:
          type: integer
        fromLocation:
          type: integer
        fromLocationId:
          type: integer
        toLocation:
          type: integer
        toLocationId:
          type: integer
        loadTons:
          type: number
        status:
          type: string
        estimatedDistance:
          type: number
        traveledDistance:
          type: number
        extraDistance:
          type: number
        requestedAt:
          type: string
          format: date-time
        deliveredAt:
          type: string
          format: date-time
        charges:
          type: integer
        totalCharge:
          type: number
        transactionStatus:
          type: string
      required:
        - id
        - customer
        - driver
        - vehicle
        - fromLocation
        - toLocation
        - charges
    OrderCreation:
      type: object
      properties:
        customerId:
          type: integer
        driverId:
          type: integer
        vehicleId:
          type: integer
        fromLocationId:
          type: integer
        toLocationId:
          type: integer
        loadTons:
          type: number
        status:
          type: string
        estimatedDistance:
          type: number
        traveledDistance:
          type: number
        extraDistance:
          type: number
        requestedAt:
          type: string
          format: date-time
        deliveredAt:
          type: string
          format: date-time
        totalCharge:
          type: number
        transactionStatus:
          type: string
      required:
        - id
        - customer
        - driver
        - vehicle
        - fromLocation
        - toLocation
        - charges